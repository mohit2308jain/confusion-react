{"version":3,"sources":["shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/LoadingComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["baseUrl","dishesLoading","type","dishesFailed","errmess","payload","addDishes","dishes","commentsFailed","addComments","comments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","leaders","Loading","className","RenderMenuItem","dish","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","color","React","Component","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","defaultValue","value","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Dishdetail","Header","handleLogin","event","alert","username","password","remember","checked","preventDefault","toggleNav","isNavOpen","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Form","FormGroup","Input","innerRef","input","Jumbotron","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderLeader","Media","left","object","body","list","heading","RenderLeaders","console","log","About","CardHeader","title","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newComment","toISOString","method","JSON","stringify","headers","credentials","addComment","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15313871.chunk.js","sourcesContent":["export const baseUrl = 'http://localhost:3001/';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => {\r\n    return ({\r\n        type: ActionTypes.ADD_COMMENT,\r\n        payload: comment\r\n    });\r\n}\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } \r\n        else {\r\n          let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { \r\n        console.log('post comments', error.message); \r\n        alert('Your comment could not be posted\\nError: '+error.message); \r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => {\r\n    return(\r\n        (dispatch) => {\r\n            dispatch(dishesLoading());\r\n\r\n            return (fetch(baseUrl + 'dishes')\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    } \r\n                    else {\r\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                }, error => {\r\n                        let errmess = new Error(error.message);\r\n                        throw errmess;\r\n                    }\r\n                )\r\n                .then(response => response.json())\r\n                .then(dishes => dispatch(addDishes(dishes)))\r\n                .catch(error => dispatch(dishesFailed(error.message)))\r\n            )\r\n        }\r\n    )    \r\n}\r\n/*\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    setTimeout(() => {\r\n        dispatch(addDishes(DISHES));\r\n    }, 2000);\r\n}\r\n*/\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => {\r\n    return( \r\n        (dispatch) => {\r\n            return (fetch(baseUrl + 'comments')\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response;\r\n                    }\r\n                    else {\r\n                        let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                },\r\n                error => {\r\n                        let errmess = new Error(error.message);\r\n                        throw errmess;\r\n                    }\r\n                )\r\n                .then(response => response.json())\r\n                .then(comments => dispatch(addComments(comments)))\r\n                .catch(error => dispatch(commentsFailed(error.message)))\r\n            )\r\n        }\r\n    )\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n\r\n    return (fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n                let errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)))\r\n    )\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return (fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n                let errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)))\r\n    )\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } \r\n        else {\r\n          let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n        console.log(response)\r\n        }\r\n    )\r\n    .catch(error => { \r\n        console.log('post comments', error.message); \r\n        alert('Your comment could not be posted\\nError: '+error.message); \r\n    });\r\n};\r\n","export const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LEADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst RenderMenuItem = ({dish}) => {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => {\r\n    return (val && val.length);\r\n}\r\n\r\nconst maxLength = (len) => (val) => {\r\n    return (!(val) || (val.length <= len));\r\n}\r\n\r\nconst minLength = (len) => (val) => {\r\n    return ( val && (val.length >= len));\r\n}\r\n\r\nconst isNumber = (val) => {\r\n    return (!isNaN(Number(val)));\r\n}\r\n\r\nconst validEmail = (val) => {\r\n    return (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val));\r\n}\r\n\r\nclass Contact extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message )\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                                <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                                <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                                <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                \r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-9\">\r\n\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\"\r\n                                        name=\"firstname\" placeholder=\"First Name\"\r\n                                        className=\"form-control\" \r\n                                        validators={{ required, \r\n                                            minLength: minLength(3), \r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".firstname\" show=\"touched\"\r\n                                        messages={{required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\"\r\n                                        name=\"lastname\" placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{ required, \r\n                                            minLength: minLength(3), \r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".lastname\" show=\"touched\"\r\n                                        messages={{required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\"\r\n                                        name=\"telnum\" placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{ required, \r\n                                            minLength: minLength(3), \r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".telnum\" show=\"touched\"\r\n                                        messages={{ required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" \r\n                                        name=\"email\" placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{ required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".email\" show=\"touched\"\r\n                                        messages={{ required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                \r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\" /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, Button, Label,\r\n  CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = (val) => {\r\n  return (val && val.length);\r\n}\r\n\r\nconst maxLength = (len) => (val) => {\r\n  return (!(val) || (val.length <= len));\r\n}\r\n\r\nconst minLength = (len) => (val) => {\r\n  return ( val && (val.length >= len));\r\n}\r\n\r\nclass CommentForm extends React.Component {\r\n\r\n  state = {\r\n    isModalOpen: false\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n    isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleSubmit = (values) => {\r\n    this.toggleModal();\r\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Button outline color=\"secondary\" onClick={() => this.toggleModal()}>\r\n          <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"rating\">Rating</Label>\r\n                <Control.select model=\".rating\" name=\"rating\"\r\n                  className=\"form-control\" defaultValue=\"1\">\r\n                  <option>1</option>\r\n                  <option>2</option>\r\n                  <option>3</option>\r\n                  <option>4</option>\r\n                  <option>5</option>\r\n                </Control.select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"author\">Your Name</Label>\r\n                <Control.text model=\".author\" id=\"author\"\r\n                  name=\"author\" placeholder=\"Your Name\"\r\n                  className=\"form-control\" \r\n                  validators={{ minLength: minLength(3), \r\n                    maxLength: maxLength(15)\r\n                  }}\r\n                />\r\n\r\n                <Errors className=\"text-danger\"\r\n                  model=\".author\" show=\"touched\"\r\n                  messages={{minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less'\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"comment\">Comment</Label>\r\n                <Control.textarea model=\".comment\" id=\"comment\" \r\n                  name=\"comment\" rows=\"6\" \r\n                  className=\"form-control\" \r\n                  validators={{ required\r\n                  }}\r\n                  />\r\n\r\n                <Errors className=\"text-danger\"\r\n                  model=\".comment\" show=\"touched\"\r\n                  messages={{ required: 'Required'\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            \r\n            </LocalForm>\r\n              \r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst RenderDish = ({dish}) => {\r\n  return(\r\n    <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n      <Card>\r\n          <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n          <CardBody>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n      </Card>\r\n    </FadeTransform>\r\n  );\r\n}\r\n\r\nconst RenderComments = ({comments, postComment, dishId}) => {\r\n  if(comments!=null){\r\n    const comment = comments.map((comment) => {\r\n      return(\r\n        <Fade in>\r\n          <li key={comment.id}>\r\n            <p className=\"pt-2 pr-2 pb-2\">{comment.comment}</p>\r\n            <p className=\"pt-2 pr-2 pb-2\">{`-- ${comment.author} , ${new Intl.DateTimeFormat('en-IN', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}`}</p>\r\n          </li>\r\n        </Fade>\r\n      ) \r\n    })\r\n    return(\r\n      <div>\r\n        <h4>Comments</h4>\r\n        <ul className=\"list-unstyled\"><Stagger in>{comment}</Stagger></ul>\r\n        <CommentForm dishId={dishId} postComment={postComment} />\r\n      </div>\r\n    )\r\n  }\r\n  else{\r\n    return(<div></div>)\r\n  }\r\n}\r\n\r\nconst Dishdetail = (props) => {\r\n    if (props.isLoading) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\">            \r\n                  <Loading />\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return(\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderDish dish={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderComments comments={props.comments} \r\n                      postComment={props.postComment}\r\n                      dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dishdetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n        isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin = (event) => {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={() => this.toggleModal()}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                        <ModalBody>\r\n                            <Form onSubmit={(event) => this.handleLogin(event)}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"username\">Username</Label>\r\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                        innerRef={(input) => this.username = input} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                        innerRef={(input) => this.password = input}  />\r\n                                </FormGroup>\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input}  />\r\n                                        Remember me\r\n                                    </Label>\r\n                                </FormGroup>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                            </Form>\r\n                        </ModalBody>\r\n                </Modal>\r\n\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = (props) => {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                    <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { FadeTransform } from 'react-animation-components';\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nconst RenderCard = ({ item, isLoading, errMess }) => {\r\n\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst Home = (props) => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard  item={props.dish} \r\n                        isLoading={props.dishesLoading} \r\n                        errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                        isLoading={props.promoLoading} \r\n                        errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                        isLoading={props.leaderLoading}\r\n                        errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Fade, Stagger } from 'react-animation-components';\nimport Loading from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst RenderLeader = ({ leader }) => {\n    return(\n        <Media>\n            <Media left>\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\n            </Media>\n            <Media body>\n                <Media list>\n                    <Media heading>{leader.name}</Media>\n                </Media>\n                <Media list>\n                    {leader.designation}\n                </Media>\n                <Media list className=\"mt-3 mb-3\">\n                    {leader.description}\n                </Media>\n            </Media>\n        </Media>\n    )\n}\n\nconst RenderLeaders = (props) => {\n    console.log(props.leaders)\n    if (props.leaders.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.leaders.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">  \n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else{\n        return(\n            <Stagger in>\n                {props.leaders.leaders.map((leader) => {\n                    return (\n                        <Fade in key={leader.id}>\n                            <div className=\"col-12 m-1\">\n                                <RenderLeader leader={leader} />\n                            </div>\n                        </Fade>\n                    )\n                })\n            }\n            </Stagger>\n        )\n    }\n}\n\nconst About = (props) => {\n\n    return(\n        <div className=\"container\">\n\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n\n            <div className=\"row row-content\">\n\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n\n            </div>\n\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <RenderLeaders leaders={props.leaders} />\n                    </Media>\n                </div>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default About;    ","import React from 'react';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from 'react-redux-form';\r\n\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\n\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent'; \r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return ({\r\n    fetchDishes: () => { \r\n      return dispatch(fetchDishes());\r\n    },\r\n\r\n    resetFeedbackForm: () => { \r\n      return dispatch(actions.reset('feedback'))\r\n    },\r\n\r\n    fetchComments: () => { \r\n      return dispatch(fetchComments());\r\n    },\r\n\r\n    fetchPromos: () => { \r\n      return dispatch(fetchPromos());\r\n    },\r\n\r\n    fetchLeaders: () => {\r\n      return dispatch(fetchLeaders());\r\n    },\r\n    \r\n    postComment: (dishId, rating, author, comment) => {\r\n      return dispatch(postComment(dishId, rating, author, comment))\r\n    },\r\n\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => {\r\n      return dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n    }\r\n\r\n  })\r\n}\r\n\r\nclass Main extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n              isLoading={this.props.dishes.isLoading}\r\n              errMess={this.props.dishes.errMess}\r\n              comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n              commentsErrMess={this.props.comments.errMess}\r\n              postComment={this.props.postComment}\r\n          />\r\n      );\r\n    };\r\n\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leaderLoading={this.props.leaders.isLoading}\r\n              leaderErrMess={this.props.leaders.errMess}\r\n          />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter((connect(mapStateToProps, mapDispatchToProps)(Main)));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes:[]\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default: return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { \r\n            errMess: null, \r\n            comments:[]\r\n        }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        let comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = { isLoading: true,\r\n        errMess: null,\r\n        promotions:[]\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading:true,\r\n        errMess: null,\r\n        leaders: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n        return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n          <BrowserRouter>\n            <div className=\"App\">\n              <Main />\n            </div>\n          </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from \"./comments\";\r\nimport { Promotions } from \"./promotions\";\r\nimport { Leaders } from \"./leaders\";\r\nimport { InitialFeedback } from './forms';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport { createForms } from 'react-redux-form';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware( thunk, logger )\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}